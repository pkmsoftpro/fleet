system.label=Warranty

docs.home=${project.home}/target/xradar/docs
target.classes=${project.home}/target/classes
target.source=${project.home}/src/main/java
radar.config=${project.home}/etc/radar-config.xml

## Set pmd the rulesets for the system
pmd.analysis.rulesetfiles=rulesets/basic.xml,rulesets/imports.xml,rulesets/unusedcode.xml,rulesets/design.xml,rulesets/codesize.xml,rulesets/braces.xml, rulesets/coupling.xml, rulesets/optimizations.xml, rulesets/sunsecure.xml, rulesets/logging-java.xml, rulesets/strings.xml

## Set pmd-cpd the minimum token count to qualify for a duplication
cpd.analysis.minimum.token.count=75

## Set checkstyle style config for the system
checkstyle.analysis.checks=${xradar.home}/etc/config/sun_checks.xml

## OPTIONAL : If you want coupling analysis. Set to true. For large systems, this may require quite a lot of performance. 
coupling.analysis=true

## OPTIONAL : If you have a javadoc available, you can incorporate that as well. Else, comment out.
javadoc.report=true
javadoc.root=${project.home}/build/docs

## OPTIONAL : If you want static class fileset analysis, set to true. Else, comment out.
## If bcc.analysis=true. Set the classes that are entrypoints to the system (bcc.analysis.critical.classes).
## This will be the basis of the classfileset that is generated. Default is set to all. This task currently only runs in unix/linux/cygwin
#bcc.analysis=true
#bcc.analysis.critical.classes=**/**.class

## OPTIONAL : If you have junit reports running and have an available report, set to true. Else, comment out.
junit.report.analysis=true
junit.report.file=${project.home}/target/surefire-reports/TEST-tavant.twms.TwmsSuiteTest.xml

## OPTIONAL : If you have jcoverage reports running as part of your unit tests and have an available report, set to true. Else, comment out.
#jcoverage.report.analysis=true
#jcoverage.report.file=${project.home}/build/reports/coverage-xml/coverage.xml

##cobertura.report.analysis=true
##cobertura.report.root=${project.home}/build/reports/coverage-html
##cobertura.report.file=${project.home}/build/reports/coverage-xml/coverage.xml

## OPTIONAL : If you have sourcecontrol reports running as part of your unit tests and have an available report, set to true. Else, comment out.
## In Many cases this data is not available. You should comment this out when running the XRadar for the first
## time on your project.
#source.control.report.analysis=true
#source.control.report.file=${docs.home}/xml/source_control_report.xml

## OPTIONAL : Add your own properties here if you want to run your own system specific tasks from system_specific.xml

