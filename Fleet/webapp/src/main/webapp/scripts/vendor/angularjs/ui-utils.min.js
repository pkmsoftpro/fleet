angular.module('ui.event',[]).directive('uiEvent',['$parse',function($parse){return function($scope,elm,attrs){var events=$scope.$eval(attrs.uiEvent);angular.forEach(events,function(uiEvent,eventName){var fn=$parse(uiEvent);elm.bind(eventName,function(evt){var params=Array.prototype.slice.call(arguments);params=params.splice(1);fn($scope,{$event:evt,$params:params});if(!$scope.$$phase){$scope.$apply();}});});};}]);angular.module('ui.format',[]).filter('format',function(){return function(value,replace){var target=value;if(angular.isString(target)&&replace!==undefined){if(!angular.isArray(replace)&&!angular.isObject(replace)){replace=[replace];}
if(angular.isArray(replace)){var rlen=replace.length;var rfx=function(str,i){i=parseInt(i,10);return(i>=0&&i<rlen)?replace[i]:str;};target=target.replace(/\$([0-9]+)/g,rfx);}
else{angular.forEach(replace,function(value,key){target=target.split(':'+key).join(value);});}}
return target;};});angular.module('ui.highlight',[]).filter('highlight',function(){return function(text,search,caseSensitive){if(search||angular.isNumber(search)){text=text.toString();search=search.toString();if(caseSensitive){return text.split(search).join('<span class="ui-match">'+search+'</span>');}else{return text.replace(new RegExp(search,'gi'),'<span class="ui-match">$&</span>');}}else{return text;}};});angular.module('ui.include',[]).directive('uiInclude',['$http','$templateCache','$anchorScroll','$compile',function($http,$templateCache,$anchorScroll,$compile){return{restrict:'ECA',terminal:true,compile:function(element,attr){var srcExp=attr.uiInclude||attr.src,fragExp=attr.fragment||'',onloadExp=attr.onload||'',autoScrollExp=attr.autoscroll;return function(scope,element){var changeCounter=0,childScope;var clearContent=function(){if(childScope){childScope.$destroy();childScope=null;}
element.html('');};function ngIncludeWatchAction(){var thisChangeId=++changeCounter;var src=scope.$eval(srcExp);var fragment=scope.$eval(fragExp);if(src){$http.get(src,{cache:$templateCache}).success(function(response){if(thisChangeId!==changeCounter){return;}
if(childScope){childScope.$destroy();}
childScope=scope.$new();var contents;if(fragment){contents=angular.element('<div/>').html(response).find(fragment);}
else{contents=angular.element('<div/>').html(response).contents();}
element.html(contents);$compile(contents)(childScope);if(angular.isDefined(autoScrollExp)&&(!autoScrollExp||scope.$eval(autoScrollExp))){$anchorScroll();}
childScope.$emit('$includeContentLoaded');scope.$eval(onloadExp);}).error(function(){if(thisChangeId===changeCounter){clearContent();}});}else{clearContent();}}
scope.$watch(fragExp,ngIncludeWatchAction);scope.$watch(srcExp,ngIncludeWatchAction);};}};}]);angular.module('ui.indeterminate',[]).directive('uiIndeterminate',[function(){return{compile:function(tElm,tAttrs){if(!tAttrs.type||tAttrs.type.toLowerCase()!=='checkbox'){return angular.noop;}
return function($scope,elm,attrs){$scope.$watch(attrs.uiIndeterminate,function(newVal,oldVal){elm[0].indeterminate=!!newVal;});};}};}]);angular.module('ui.inflector',[]).filter('inflector',function(){function ucwords(text){return text.replace(/^([a-z])|\s+([a-z])/g,function($1){return $1.toUpperCase();});}
function breakup(text,separator){return text.replace(/[A-Z]/g,function(match){return separator+match;});}
var inflectors={humanize:function(value){return ucwords(breakup(value,' ').split('_').join(' '));},underscore:function(value){return value.substr(0,1).toLowerCase()+breakup(value.substr(1),'_').toLowerCase().split(' ').join('_');},variable:function(value){value=value.substr(0,1).toLowerCase()+ucwords(value.split('_').join(' ')).substr(1).split(' ').join('');return value;}};return function(text,inflector,separator){if(inflector!==false&&angular.isString(text)){inflector=inflector||'humanize';return inflectors[inflector](text);}else{return text;}};});angular.module('ui.jq',[]).value('uiJqConfig',{}).directive('uiJq',['uiJqConfig','$timeout',function uiJqInjectingFunction(uiJqConfig,$timeout){return{restrict:'A',compile:function uiJqCompilingFunction(tElm,tAttrs){if(!angular.isFunction(tElm[tAttrs.uiJq])){throw new Error('ui-jq: The "'+tAttrs.uiJq+'" function does not exist');}
var options=uiJqConfig&&uiJqConfig[tAttrs.uiJq];return function uiJqLinkingFunction(scope,elm,attrs){var linkOptions=[];if(attrs.uiOptions){linkOptions=scope.$eval('['+attrs.uiOptions+']');if(angular.isObject(options)&&angular.isObject(linkOptions[0])){linkOptions[0]=angular.extend({},options,linkOptions[0]);}}else if(options){linkOptions=[options];}
if(attrs.ngModel&&elm.is('select,input,textarea')){elm.bind('change',function(){elm.trigger('input');});}
function callPlugin(){$timeout(function(){elm[attrs.uiJq].apply(elm,linkOptions);},0,false);}
if(attrs.uiRefresh){scope.$watch(attrs.uiRefresh,function(newVal){callPlugin();});}
callPlugin();};}};}]);angular.module('ui.keypress',[]).factory('keypressHelper',['$parse',function keypress($parse){var keysByCode={8:'backspace',9:'tab',13:'enter',27:'esc',32:'space',33:'pageup',34:'pagedown',35:'end',36:'home',37:'left',38:'up',39:'right',40:'down',45:'insert',46:'delete'};var capitaliseFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1);};return function(mode,scope,elm,attrs){var params,combinations=[];params=scope.$eval(attrs['ui'+capitaliseFirstLetter(mode)]);angular.forEach(params,function(v,k){var combination,expression;expression=$parse(v);angular.forEach(k.split(' '),function(variation){combination={expression:expression,keys:{}};angular.forEach(variation.split('-'),function(value){combination.keys[value]=true;});combinations.push(combination);});});elm.bind(mode,function(event){var metaPressed=!!(event.metaKey&&!event.ctrlKey);var altPressed=!!event.altKey;var ctrlPressed=!!event.ctrlKey;var shiftPressed=!!event.shiftKey;var keyCode=event.keyCode;if(mode==='keypress'&&!shiftPressed&&keyCode>=97&&keyCode<=122){keyCode=keyCode-32;}
angular.forEach(combinations,function(combination){var mainKeyPressed=combination.keys[keysByCode[keyCode]]||combination.keys[keyCode.toString()];var metaRequired=!!combination.keys.meta;var altRequired=!!combination.keys.alt;var ctrlRequired=!!combination.keys.ctrl;var shiftRequired=!!combination.keys.shift;if(mainKeyPressed&&(metaRequired===metaPressed)&&(altRequired===altPressed)&&(ctrlRequired===ctrlPressed)&&(shiftRequired===shiftPressed)){scope.$apply(function(){combination.expression(scope,{'$event':event});});}});});};}]);angular.module('ui.keypress').directive('uiKeydown',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keydown',scope,elm,attrs);}};}]);angular.module('ui.keypress').directive('uiKeypress',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keypress',scope,elm,attrs);}};}]);angular.module('ui.keypress').directive('uiKeyup',['keypressHelper',function(keypressHelper){return{link:function(scope,elm,attrs){keypressHelper('keyup',scope,elm,attrs);}};}]);angular.module('ui.mask',[]).value('uiMaskConfig',{'maskDefinitions':{'9':/\d/,'A':/[a-zA-Z]/,'*':/[a-zA-Z0-9]/}}).directive('uiMask',['uiMaskConfig',function(maskConfig){return{priority:100,require:'ngModel',restrict:'A',compile:function uiMaskCompilingFunction(){var options=maskConfig;return function uiMaskLinkingFunction(scope,iElement,iAttrs,controller){var maskProcessed=false,eventsBound=false,maskCaretMap,maskPatterns,maskPlaceholder,maskComponents,minRequiredLength,value,valueMasked,isValid,originalPlaceholder=iAttrs.placeholder,originalMaxlength=iAttrs.maxlength,oldValue,oldValueUnmasked,oldCaretPosition,oldSelectionLength;function initialize(maskAttr){if(!angular.isDefined(maskAttr)){return uninitialize();}
processRawMask(maskAttr);if(!maskProcessed){return uninitialize();}
initializeElement();bindEventListeners();return true;}
function initPlaceholder(placeholderAttr){if(!angular.isDefined(placeholderAttr)){return;}
maskPlaceholder=placeholderAttr;if(maskProcessed){eventHandler();}}
function formatter(fromModelValue){if(!maskProcessed){return fromModelValue;}
value=unmaskValue(fromModelValue||'');isValid=validateValue(value);controller.$setValidity('mask',isValid);return isValid&&value.length?maskValue(value):undefined;}
function parser(fromViewValue){if(!maskProcessed){return fromViewValue;}
value=unmaskValue(fromViewValue||'');isValid=validateValue(value);controller.$viewValue=value.length?maskValue(value):'';controller.$setValidity('mask',isValid);if(value===''&&controller.$error.required!==undefined){controller.$setValidity('required',false);}
return isValid?value:undefined;}
var linkOptions={};if(iAttrs.uiOptions){linkOptions=scope.$eval('['+iAttrs.uiOptions+']');if(angular.isObject(linkOptions[0])){linkOptions=(function(original,current){for(var i in original){if(Object.prototype.hasOwnProperty.call(original,i)){if(!current[i]){current[i]=angular.copy(original[i]);}else{angular.extend(current[i],original[i]);}}}
return current;})(options,linkOptions[0]);}}else{linkOptions=options;}
iAttrs.$observe('uiMask',initialize);iAttrs.$observe('placeholder',initPlaceholder);controller.$formatters.push(formatter);controller.$parsers.push(parser);function uninitialize(){maskProcessed=false;unbindEventListeners();if(angular.isDefined(originalPlaceholder)){iElement.attr('placeholder',originalPlaceholder);}else{iElement.removeAttr('placeholder');}
if(angular.isDefined(originalMaxlength)){iElement.attr('maxlength',originalMaxlength);}else{iElement.removeAttr('maxlength');}
iElement.val(controller.$modelValue);controller.$viewValue=controller.$modelValue;return false;}
function initializeElement(){value=oldValueUnmasked=unmaskValue(controller.$modelValue||'');valueMasked=oldValue=maskValue(value);isValid=validateValue(value);var viewValue=isValid&&value.length?valueMasked:'';if(iAttrs.maxlength){iElement.attr('maxlength',maskCaretMap[maskCaretMap.length-1]*2);}
iElement.attr('placeholder',maskPlaceholder);iElement.val(viewValue);controller.$viewValue=viewValue;}
function bindEventListeners(){if(eventsBound){return;}
iElement.bind('blur',blurHandler);iElement.bind('mousedown mouseup',mouseDownUpHandler);iElement.bind('input keyup click focus',eventHandler);eventsBound=true;}
function unbindEventListeners(){if(!eventsBound){return;}
iElement.unbind('blur',blurHandler);iElement.unbind('mousedown',mouseDownUpHandler);iElement.unbind('mouseup',mouseDownUpHandler);iElement.unbind('input',eventHandler);iElement.unbind('keyup',eventHandler);iElement.unbind('click',eventHandler);iElement.unbind('focus',eventHandler);eventsBound=false;}
function validateValue(value){return value.length?value.length>=minRequiredLength:true;}
function unmaskValue(value){var valueUnmasked='',maskPatternsCopy=maskPatterns.slice();value=value.toString();angular.forEach(maskComponents,function(component){value=value.replace(component,'');});angular.forEach(value.split(''),function(chr){if(maskPatternsCopy.length&&maskPatternsCopy[0].test(chr)){valueUnmasked+=chr;maskPatternsCopy.shift();}});return valueUnmasked;}
function maskValue(unmaskedValue){var valueMasked='',maskCaretMapCopy=maskCaretMap.slice();angular.forEach(maskPlaceholder.split(''),function(chr,i){if(unmaskedValue.length&&i===maskCaretMapCopy[0]){valueMasked+=unmaskedValue.charAt(0)||'_';unmaskedValue=unmaskedValue.substr(1);maskCaretMapCopy.shift();}
else{valueMasked+=chr;}});return valueMasked;}
function getPlaceholderChar(i){var placeholder=iAttrs.placeholder;if(typeof placeholder!=="undefined"&&placeholder[i]){return placeholder[i];}else{return"_";}}
function getMaskComponents(){return maskPlaceholder.replace(/[_]+/g,'_').replace(/([^_]+)([a-zA-Z0-9])([^_])/g,'$1$2_$3').split('_');}
function processRawMask(mask){var characterCount=0;maskCaretMap=[];maskPatterns=[];maskPlaceholder='';if(typeof mask==='string'){minRequiredLength=0;var isOptional=false,splitMask=mask.split("");angular.forEach(splitMask,function(chr,i){if(linkOptions.maskDefinitions[chr]){maskCaretMap.push(characterCount);maskPlaceholder+=getPlaceholderChar(i);maskPatterns.push(linkOptions.maskDefinitions[chr]);characterCount++;if(!isOptional){minRequiredLength++;}}
else if(chr==="?"){isOptional=true;}
else{maskPlaceholder+=chr;characterCount++;}});}
maskCaretMap.push(maskCaretMap.slice().pop()+1);maskComponents=getMaskComponents();maskProcessed=maskCaretMap.length>1?true:false;}
function blurHandler(){oldCaretPosition=0;oldSelectionLength=0;if(!isValid||value.length===0){valueMasked='';iElement.val('');scope.$apply(function(){controller.$setViewValue('');});}}
function mouseDownUpHandler(e){if(e.type==='mousedown'){iElement.bind('mouseout',mouseoutHandler);}else{iElement.unbind('mouseout',mouseoutHandler);}}
iElement.bind('mousedown mouseup',mouseDownUpHandler);function mouseoutHandler(){oldSelectionLength=getSelectionLength(this);iElement.unbind('mouseout',mouseoutHandler);}
function eventHandler(e){e=e||{};var eventWhich=e.which,eventType=e.type;if(eventWhich===16||eventWhich===91){return;}
var val=iElement.val(),valOld=oldValue,valMasked,valUnmasked=unmaskValue(val),valUnmaskedOld=oldValueUnmasked,valAltered=false,caretPos=getCaretPosition(this)||0,caretPosOld=oldCaretPosition||0,caretPosDelta=caretPos-caretPosOld,caretPosMin=maskCaretMap[0],caretPosMax=maskCaretMap[valUnmasked.length]||maskCaretMap.slice().shift(),selectionLenOld=oldSelectionLength||0,isSelected=getSelectionLength(this)>0,wasSelected=selectionLenOld>0,isAddition=(val.length>valOld.length)||(selectionLenOld&&val.length>valOld.length-selectionLenOld),isDeletion=(val.length<valOld.length)||(selectionLenOld&&val.length===valOld.length-selectionLenOld),isSelection=(eventWhich>=37&&eventWhich<=40)&&e.shiftKey,isKeyLeftArrow=eventWhich===37,isKeyBackspace=eventWhich===8||(eventType!=='keyup'&&isDeletion&&(caretPosDelta===-1)),isKeyDelete=eventWhich===46||(eventType!=='keyup'&&isDeletion&&(caretPosDelta===0)&&!wasSelected),caretBumpBack=(isKeyLeftArrow||isKeyBackspace||eventType==='click')&&caretPos>caretPosMin;oldSelectionLength=getSelectionLength(this);if(isSelection||(isSelected&&(eventType==='click'||eventType==='keyup'))){return;}
if((eventType==='input')&&isDeletion&&!wasSelected&&valUnmasked===valUnmaskedOld){while(isKeyBackspace&&caretPos>caretPosMin&&!isValidCaretPosition(caretPos)){caretPos--;}
while(isKeyDelete&&caretPos<caretPosMax&&maskCaretMap.indexOf(caretPos)===-1){caretPos++;}
var charIndex=maskCaretMap.indexOf(caretPos);valUnmasked=valUnmasked.substring(0,charIndex)+valUnmasked.substring(charIndex+1);valAltered=true;}
valMasked=maskValue(valUnmasked);oldValue=valMasked;oldValueUnmasked=valUnmasked;iElement.val(valMasked);if(valAltered){scope.$apply(function(){controller.$setViewValue(valUnmasked);});}
if(isAddition&&(caretPos<=caretPosMin)){caretPos=caretPosMin+1;}
if(caretBumpBack){caretPos--;}
caretPos=caretPos>caretPosMax?caretPosMax:caretPos<caretPosMin?caretPosMin:caretPos;while(!isValidCaretPosition(caretPos)&&caretPos>caretPosMin&&caretPos<caretPosMax){caretPos+=caretBumpBack?-1:1;}
if((caretBumpBack&&caretPos<caretPosMax)||(isAddition&&!isValidCaretPosition(caretPosOld))){caretPos++;}
oldCaretPosition=caretPos;setCaretPosition(this,caretPos);}
function isValidCaretPosition(pos){return maskCaretMap.indexOf(pos)>-1;}
function getCaretPosition(input){if(input.selectionStart!==undefined){return input.selectionStart;}else if(document.selection){input.focus();var selection=document.selection.createRange();selection.moveStart('character',-input.value.length);return selection.text.length;}
return 0;}
function setCaretPosition(input,pos){if(input.offsetWidth===0||input.offsetHeight===0){return;}
if(input.setSelectionRange){input.focus();input.setSelectionRange(pos,pos);}
else if(input.createTextRange){var range=input.createTextRange();range.collapse(true);range.moveEnd('character',pos);range.moveStart('character',pos);range.select();}}
function getSelectionLength(input){if(input.selectionStart!==undefined){return(input.selectionEnd-input.selectionStart);}
if(document.selection){return(document.selection.createRange().text.length);}
return 0;}
if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement){"use strict";if(this===null){throw new TypeError();}
var t=Object(this);var len=t.length>>>0;if(len===0){return-1;}
var n=0;if(arguments.length>1){n=Number(arguments[1]);if(n!==n){n=0;}else if(n!==0&&n!==Infinity&&n!==-Infinity){n=(n>0||-1)*Math.floor(Math.abs(n));}}
if(n>=len){return-1;}
var k=n>=0?n:Math.max(len-Math.abs(n),0);for(;k<len;k++){if(k in t&&t[k]===searchElement){return k;}}
return-1;};}};}};}]);angular.module('ui.reset',[]).value('uiResetConfig',null).directive('uiReset',['uiResetConfig',function(uiResetConfig){var resetValue=null;if(uiResetConfig!==undefined){resetValue=uiResetConfig;}
return{require:'ngModel',link:function(scope,elm,attrs,ctrl){var aElement;aElement=angular.element('<a class="ui-reset" />');elm.wrap('<span class="ui-resetwrap" />').after(aElement);aElement.bind('click',function(e){e.preventDefault();scope.$apply(function(){if(attrs.uiReset){ctrl.$setViewValue(scope.$eval(attrs.uiReset));}else{ctrl.$setViewValue(resetValue);}
ctrl.$render();});});}};}]);angular.module('ui.route',[]).directive('uiRoute',['$location','$parse',function($location,$parse){return{restrict:'AC',scope:true,compile:function(tElement,tAttrs){var useProperty;if(tAttrs.uiRoute){useProperty='uiRoute';}else if(tAttrs.ngHref){useProperty='ngHref';}else if(tAttrs.href){useProperty='href';}else{throw new Error('uiRoute missing a route or href property on '+tElement[0]);}
return function($scope,elm,attrs){var modelSetter=$parse(attrs.ngModel||attrs.routeModel||'$uiRoute').assign;var watcher=angular.noop;function staticWatcher(newVal){var hash=newVal.indexOf('#');if(hash>-1){newVal=newVal.substr(hash+1);}
watcher=function watchHref(){modelSetter($scope,($location.path().indexOf(newVal)>-1));};watcher();}
function regexWatcher(newVal){var hash=newVal.indexOf('#');if(hash>-1){newVal=newVal.substr(hash+1);}
watcher=function watchRegex(){var regexp=new RegExp('^'+newVal+'$',['i']);modelSetter($scope,regexp.test($location.path()));};watcher();}
switch(useProperty){case'uiRoute':if(attrs.uiRoute){regexWatcher(attrs.uiRoute);}else{attrs.$observe('uiRoute',regexWatcher);}
break;case'ngHref':if(attrs.ngHref){staticWatcher(attrs.ngHref);}else{attrs.$observe('ngHref',staticWatcher);}
break;case'href':staticWatcher(attrs.href);}
$scope.$on('$routeChangeSuccess',function(){watcher();});$scope.$on('$stateChangeSuccess',function(){watcher();});};}};}]);angular.module('ui.scrollfix',[]).directive('uiScrollfix',['$window',function($window){'use strict';return{require:'^?uiScrollfixTarget',link:function(scope,elm,attrs,uiScrollfixTarget){var top=elm[0].offsetTop,$target=uiScrollfixTarget&&uiScrollfixTarget.$element||angular.element($window);if(!attrs.uiScrollfix){attrs.uiScrollfix=top;}else if(typeof(attrs.uiScrollfix)==='string'){if(attrs.uiScrollfix.charAt(0)==='-'){attrs.uiScrollfix=top-parseFloat(attrs.uiScrollfix.substr(1));}else if(attrs.uiScrollfix.charAt(0)==='+'){attrs.uiScrollfix=top+parseFloat(attrs.uiScrollfix.substr(1));}}
$target.bind('scroll',function(){var offset;if(angular.isDefined($window.pageYOffset)){offset=$window.pageYOffset;}else{var iebody=(document.compatMode&&document.compatMode!=="BackCompat")?document.documentElement:document.body;offset=iebody.scrollTop;}
if(!elm.hasClass('ui-scrollfix')&&offset>attrs.uiScrollfix){elm.addClass('ui-scrollfix');}else if(elm.hasClass('ui-scrollfix')&&offset<attrs.uiScrollfix){elm.removeClass('ui-scrollfix');}});}};}]).directive('uiScrollfixTarget',[function(){'use strict';return{controller:function($element){this.$element=$element;}};}]);angular.module('ui.showhide',[]).directive('uiShow',[function(){return function(scope,elm,attrs){scope.$watch(attrs.uiShow,function(newVal,oldVal){if(newVal){elm.addClass('ui-show');}else{elm.removeClass('ui-show');}});};}]).directive('uiHide',[function(){return function(scope,elm,attrs){scope.$watch(attrs.uiHide,function(newVal,oldVal){if(newVal){elm.addClass('ui-hide');}else{elm.removeClass('ui-hide');}});};}]).directive('uiToggle',[function(){return function(scope,elm,attrs){scope.$watch(attrs.uiToggle,function(newVal,oldVal){if(newVal){elm.removeClass('ui-hide').addClass('ui-show');}else{elm.removeClass('ui-show').addClass('ui-hide');}});};}]);angular.module('ui.unique',[]).filter('unique',['$parse',function($parse){return function(items,filterOn){if(filterOn===false){return items;}
if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var hashCheck={},newItems=[],get=angular.isString(filterOn)?$parse(filterOn):function(item){return item;};var extractValueToCompare=function(item){return angular.isObject(item)?get(item):item;};angular.forEach(items,function(item){var valueToCheck,isDuplicate=false;for(var i=0;i<newItems.length;i++){if(angular.equals(extractValueToCompare(newItems[i]),extractValueToCompare(item))){isDuplicate=true;break;}}
if(!isDuplicate){newItems.push(item);}});items=newItems;}
return items;};}]);angular.module('ui.validate',[]).directive('uiValidate',function(){return{restrict:'A',require:'ngModel',link:function(scope,elm,attrs,ctrl){var validateFn,watch,validators={},validateExpr=scope.$eval(attrs.uiValidate);if(!validateExpr){return;}
if(angular.isString(validateExpr)){validateExpr={validator:validateExpr};}
angular.forEach(validateExpr,function(exprssn,key){validateFn=function(valueToValidate){var expression=scope.$eval(exprssn,{'$value':valueToValidate});if(angular.isObject(expression)&&angular.isFunction(expression.then)){expression.then(function(){ctrl.$setValidity(key,true);},function(){ctrl.$setValidity(key,false);});return valueToValidate;}else if(expression){ctrl.$setValidity(key,true);return valueToValidate;}else{ctrl.$setValidity(key,false);return undefined;}};validators[key]=validateFn;ctrl.$formatters.push(validateFn);ctrl.$parsers.push(validateFn);});function apply_watch(watch)
{if(angular.isString(watch))
{scope.$watch(watch,function(){angular.forEach(validators,function(validatorFn){validatorFn(ctrl.$modelValue);});});return;}
if(angular.isArray(watch))
{angular.forEach(watch,function(expression){scope.$watch(expression,function()
{angular.forEach(validators,function(validatorFn){validatorFn(ctrl.$modelValue);});});});return;}
if(angular.isObject(watch))
{angular.forEach(watch,function(expression,validatorKey)
{if(angular.isString(expression))
{scope.$watch(expression,function(){validators[validatorKey](ctrl.$modelValue);});}
if(angular.isArray(expression))
{angular.forEach(expression,function(intExpression)
{scope.$watch(intExpression,function(){validators[validatorKey](ctrl.$modelValue);});});}});}}
if(attrs.uiValidateWatch){apply_watch(scope.$eval(attrs.uiValidateWatch));}}};});angular.module('ui.utils',["ui.event","ui.format","ui.highlight","ui.include","ui.indeterminate","ui.inflector","ui.jq","ui.keypress","ui.mask","ui.reset","ui.route","ui.scrollfix","ui.showhide","ui.unique","ui.validate"]);